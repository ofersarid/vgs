import React from "react";
import loadImage from "image-promise";

class ReactAsyncImagesComponent extends React.Component {
  constructor(props) {
    super(props);
    this.state = { loaded: false, error: null };
  }
  componentDidMount() {
    return this.load();
  }
  componentDidUpdate(prevProps) {
    if (this.props.src !== prevProps.src) {
      return this.load();
    }
  }
  load = async () => {
    let { src } = this.props;
    if (typeof src === "string") src = [src];
    if (!Array.isArray(src)) return;
    try {
      await Promise.all(src.map(s => loadImage(s)));
      this.setState({ loaded: true, error: null });
    } catch (error) {
      this.setState({ loaded: false, error });
    }
  };
  render() {
    return this.props.children({ ...this.state });
  }
}

export default ReactAsyncImagesComponent;
